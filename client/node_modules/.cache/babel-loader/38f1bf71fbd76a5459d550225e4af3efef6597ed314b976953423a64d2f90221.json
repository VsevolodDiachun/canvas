{"ast":null,"code":"import Tool from \"./Tool\";\nimport { finishDrawMessage } from \"../hooks/finishDrawMessage\";\nexport default class Brush extends Tool {\n  constructor(canvas, socket, id) {\n    super(canvas, socket, id);\n    this.mouseDown = void 0;\n    this.listen();\n  }\n  listen() {\n    this.canvas.onmousemove = this.mouseMoveHandler.bind(this);\n    this.canvas.onmousedown = this.mouseDownHandler.bind(this);\n    this.canvas.onmouseup = this.mouseUpHandler.bind(this);\n  }\n  mouseUpHandler() {\n    this.mouseDown = false;\n    if (this.socket && this.id) finishDrawMessage(this.socket, this.id);\n  }\n  mouseDownHandler(e) {\n    this.mouseDown = true;\n    this.ctx.beginPath();\n    this.ctx.moveTo(e.pageX - e.target.offsetLeft, e.pageY - e.target.offsetTop);\n  }\n  mouseMoveHandler(e) {\n    if (this.mouseDown && this.socket) {\n      this.socket.send(JSON.stringify({\n        method: 'draw',\n        id: this.id,\n        figure: {\n          type: 'brush',\n          x: e.pageX - e.target.offsetLeft,\n          y: e.pageY - e.target.offsetTop,\n          fillColor: this.ctx.fillStyle,\n          strokeColor: this.ctx.strokeStyle\n        }\n      }));\n    }\n  }\n  static draw(ctx, x, y, fillColor, strokeColor) {\n    ctx.fillStyle = fillColor;\n    ctx.strokeStyle = strokeColor;\n    //ctx.strokeStyle = \"white\"\n    ctx.lineTo(x, y);\n    ctx.stroke();\n  }\n  // static drawEraser(ctx: CanvasRenderingContext2D | null | undefined, x: number, y: number, color: string) {\n  //     if (ctx) {\n  //\n  //         ctx.lineTo(x, y)\n  //         ctx.stroke()\n  //     }\n  // }\n}","map":{"version":3,"names":["Tool","finishDrawMessage","Brush","constructor","canvas","socket","id","mouseDown","listen","onmousemove","mouseMoveHandler","bind","onmousedown","mouseDownHandler","onmouseup","mouseUpHandler","e","ctx","beginPath","moveTo","pageX","target","offsetLeft","pageY","offsetTop","send","JSON","stringify","method","figure","type","x","y","fillColor","fillStyle","strokeColor","strokeStyle","draw","lineTo","stroke"],"sources":["/Users/diachun/WebstormProjects/canvas/client/src/tools/Brush.ts"],"sourcesContent":["import { eventMouseHandler } from \"../models/eventMouseHandler\";\nimport Tool from \"./Tool\";\nimport {finishDrawMessage} from \"../hooks/finishDrawMessage\";\n\nexport default class Brush extends Tool {\n    mouseDown: boolean | undefined;\n    constructor(canvas: any, socket: WebSocket, id: string | null) {\n        super(canvas, socket, id)\n        this.listen()\n    }\n\n    listen() {\n            this.canvas.onmousemove = this.mouseMoveHandler.bind(this)\n            this.canvas.onmousedown = this.mouseDownHandler.bind(this)\n            this.canvas.onmouseup = this.mouseUpHandler.bind(this)\n    }\n\n    mouseUpHandler() {\n        this.mouseDown = false\n        if (this.socket && this.id) finishDrawMessage(this.socket, this.id)\n    }\n    mouseDownHandler(e: eventMouseHandler) {\n        this.mouseDown = true\n        this.ctx.beginPath()\n        this.ctx.moveTo(e.pageX - e.target.offsetLeft, e.pageY - e.target.offsetTop)\n    }\n    mouseMoveHandler(e: eventMouseHandler) {\n        if (this.mouseDown && this.socket) {\n            this.socket.send(JSON.stringify({\n                method: 'draw',\n                id: this.id,\n                figure: {\n                    type: 'brush',\n                    x: e.pageX - e.target.offsetLeft,\n                    y: e.pageY - e.target.offsetTop,\n                    fillColor: this.ctx.fillStyle,\n                    strokeColor: this.ctx.strokeStyle\n                }\n            }))\n        }\n    }\n\n    static draw(ctx: any, x: number, y: number, fillColor: string, strokeColor: string) {\n        ctx.fillStyle = fillColor\n        ctx.strokeStyle = strokeColor\n        //ctx.strokeStyle = \"white\"\n        ctx.lineTo(x, y)\n        ctx.stroke()\n    }\n    // static drawEraser(ctx: CanvasRenderingContext2D | null | undefined, x: number, y: number, color: string) {\n    //     if (ctx) {\n    //\n    //         ctx.lineTo(x, y)\n    //         ctx.stroke()\n    //     }\n    // }\n}"],"mappings":"AACA,OAAOA,IAAI,MAAM,QAAQ;AACzB,SAAQC,iBAAiB,QAAO,4BAA4B;AAE5D,eAAe,MAAMC,KAAK,SAASF,IAAI,CAAC;EAEpCG,WAAWA,CAACC,MAAW,EAAEC,MAAiB,EAAEC,EAAiB,EAAE;IAC3D,KAAK,CAACF,MAAM,EAAEC,MAAM,EAAEC,EAAE,CAAC;IAAA,KAF7BC,SAAS;IAGL,IAAI,CAACC,MAAM,CAAC,CAAC;EACjB;EAEAA,MAAMA,CAAA,EAAG;IACD,IAAI,CAACJ,MAAM,CAACK,WAAW,GAAG,IAAI,CAACC,gBAAgB,CAACC,IAAI,CAAC,IAAI,CAAC;IAC1D,IAAI,CAACP,MAAM,CAACQ,WAAW,GAAG,IAAI,CAACC,gBAAgB,CAACF,IAAI,CAAC,IAAI,CAAC;IAC1D,IAAI,CAACP,MAAM,CAACU,SAAS,GAAG,IAAI,CAACC,cAAc,CAACJ,IAAI,CAAC,IAAI,CAAC;EAC9D;EAEAI,cAAcA,CAAA,EAAG;IACb,IAAI,CAACR,SAAS,GAAG,KAAK;IACtB,IAAI,IAAI,CAACF,MAAM,IAAI,IAAI,CAACC,EAAE,EAAEL,iBAAiB,CAAC,IAAI,CAACI,MAAM,EAAE,IAAI,CAACC,EAAE,CAAC;EACvE;EACAO,gBAAgBA,CAACG,CAAoB,EAAE;IACnC,IAAI,CAACT,SAAS,GAAG,IAAI;IACrB,IAAI,CAACU,GAAG,CAACC,SAAS,CAAC,CAAC;IACpB,IAAI,CAACD,GAAG,CAACE,MAAM,CAACH,CAAC,CAACI,KAAK,GAAGJ,CAAC,CAACK,MAAM,CAACC,UAAU,EAAEN,CAAC,CAACO,KAAK,GAAGP,CAAC,CAACK,MAAM,CAACG,SAAS,CAAC;EAChF;EACAd,gBAAgBA,CAACM,CAAoB,EAAE;IACnC,IAAI,IAAI,CAACT,SAAS,IAAI,IAAI,CAACF,MAAM,EAAE;MAC/B,IAAI,CAACA,MAAM,CAACoB,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;QAC5BC,MAAM,EAAE,MAAM;QACdtB,EAAE,EAAE,IAAI,CAACA,EAAE;QACXuB,MAAM,EAAE;UACJC,IAAI,EAAE,OAAO;UACbC,CAAC,EAAEf,CAAC,CAACI,KAAK,GAAGJ,CAAC,CAACK,MAAM,CAACC,UAAU;UAChCU,CAAC,EAAEhB,CAAC,CAACO,KAAK,GAAGP,CAAC,CAACK,MAAM,CAACG,SAAS;UAC/BS,SAAS,EAAE,IAAI,CAAChB,GAAG,CAACiB,SAAS;UAC7BC,WAAW,EAAE,IAAI,CAAClB,GAAG,CAACmB;QAC1B;MACJ,CAAC,CAAC,CAAC;IACP;EACJ;EAEA,OAAOC,IAAIA,CAACpB,GAAQ,EAAEc,CAAS,EAAEC,CAAS,EAAEC,SAAiB,EAAEE,WAAmB,EAAE;IAChFlB,GAAG,CAACiB,SAAS,GAAGD,SAAS;IACzBhB,GAAG,CAACmB,WAAW,GAAGD,WAAW;IAC7B;IACAlB,GAAG,CAACqB,MAAM,CAACP,CAAC,EAAEC,CAAC,CAAC;IAChBf,GAAG,CAACsB,MAAM,CAAC,CAAC;EAChB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}