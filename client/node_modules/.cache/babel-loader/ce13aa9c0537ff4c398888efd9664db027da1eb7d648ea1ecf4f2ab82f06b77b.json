{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { getDocQSCanvas } from \"../../hooks/getDocQSCanvas\";\nconst initialState = {\n  canvas: null,\n  undoList: [],\n  redoList: [],\n  username: '',\n  socket: null,\n  sessionId: null\n};\nexport const canvasSlice = createSlice({\n  name: 'canvas',\n  initialState,\n  reducers: {\n    setUsername(state, action) {\n      state.username = action.payload;\n    },\n    setCanvas(state, action) {\n      state.canvas = action.payload;\n    },\n    pushToUndo(state, action) {\n      state.undoList.push(action.payload);\n    },\n    pushToRedo(state, action) {\n      state.redoList.push(action.payload);\n    },\n    setSocket(state, action) {\n      state.socket = action.payload;\n    },\n    setSessionId(state, action) {\n      state.sessionId = action.payload;\n    },\n    undo(state) {\n      var _state$canvas;\n      const canvasFunc = getDocQSCanvas();\n      state.canvas = canvasFunc;\n      const ctx = (_state$canvas = state.canvas) === null || _state$canvas === void 0 ? void 0 : _state$canvas.getContext('2d');\n      const canvas = state.canvas;\n      if (state.undoList.length > 0 && state.canvas) {\n        let dataURL = state.undoList.pop();\n        state.redoList.push(state.canvas.toDataURL());\n        let img = new Image();\n        img.src = dataURL;\n        img.onload = () => {\n          if (canvas) {\n            ctx === null || ctx === void 0 ? void 0 : ctx.clearRect(0, 0, canvas.width, canvas.height);\n            ctx === null || ctx === void 0 ? void 0 : ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n          }\n        };\n      } else {\n        if (state.canvas) ctx === null || ctx === void 0 ? void 0 : ctx.clearRect(0, 0, state.canvas.width, state.canvas.height);\n      }\n    },\n    redo(state) {\n      var _state$canvas2;\n      const ctx = (_state$canvas2 = state.canvas) === null || _state$canvas2 === void 0 ? void 0 : _state$canvas2.getContext('2d');\n      const canvas = state.canvas;\n      if (state.redoList.length > 0 && state.canvas) {\n        let dataURL = state.redoList.pop();\n        state.undoList.push(state.canvas.toDataURL());\n        let img = new Image();\n        img.src = dataURL;\n        img.onload = () => {\n          if (canvas) {\n            ctx === null || ctx === void 0 ? void 0 : ctx.clearRect(0, 0, canvas.width, canvas.height);\n            ctx === null || ctx === void 0 ? void 0 : ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n          }\n        };\n      }\n    }\n  }\n});\nexport default canvasSlice.reducer;","map":{"version":3,"names":["createSlice","getDocQSCanvas","initialState","canvas","undoList","redoList","username","socket","sessionId","canvasSlice","name","reducers","setUsername","state","action","payload","setCanvas","pushToUndo","push","pushToRedo","setSocket","setSessionId","undo","_state$canvas","canvasFunc","ctx","getContext","length","dataURL","pop","toDataURL","img","Image","src","onload","clearRect","width","height","drawImage","redo","_state$canvas2","reducer"],"sources":["/Users/diachun/WebstormProjects/canvas/client/src/store/reducers/CanvasSlice.ts"],"sourcesContent":["import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {WebSocketType} from \"../../utils/consts\";\nimport {getDocQSCanvas} from \"../../hooks/getDocQSCanvas\";\n\ninterface CanvasState {\n    canvas: HTMLCanvasElement | null;\n    undoList: any;\n    redoList: any;\n    username: string | null;\n    socket: WebSocketType | null,\n    sessionId: string | null\n}\n\nconst initialState: CanvasState = {\n    canvas: null,\n    undoList: [],\n    redoList: [],\n    username: '',\n    socket: null,\n    sessionId: null\n}\n\nexport const canvasSlice = createSlice({\n    name: 'canvas',\n    initialState,\n    reducers: {\n        setUsername(state, action:PayloadAction<string>) {\n            state.username = action.payload\n        },\n        setCanvas(state, action: PayloadAction<any>){\n            state.canvas = action.payload\n        },\n        pushToUndo(state, action: PayloadAction<any>) {\n            state.undoList.push(action.payload)\n        },\n        pushToRedo(state, action: PayloadAction<any>) {\n            state.redoList.push(action.payload)\n        },\n        setSocket(state, action: PayloadAction<WebSocketType>) {\n            state.socket = action.payload\n        },\n        setSessionId(state, action: PayloadAction<string>) {\n            state.sessionId = action.payload\n        },\n        undo(state) {\n            const canvasFunc = getDocQSCanvas()\n            state.canvas = canvasFunc\n            const ctx = state.canvas?.getContext('2d')\n            const canvas = state.canvas\n            if (state.undoList.length > 0 && state.canvas) {\n                let dataURL = state.undoList.pop()\n                state.redoList.push(state.canvas.toDataURL())\n                let img = new Image()\n                img.src = dataURL\n                img.onload = () => {\n                    if (canvas) {\n                        ctx?.clearRect(0, 0, canvas.width, canvas.height)\n                        ctx?.drawImage(img, 0, 0, canvas.width, canvas.height)\n                    }\n                }\n            } else {\n                  if(state.canvas) ctx?.clearRect(0, 0, state.canvas.width, state.canvas.height)\n\n            }\n        },\n        redo(state) {\n            const ctx = state.canvas?.getContext('2d')\n            const canvas = state.canvas\n            if (state.redoList.length > 0 && state.canvas) {\n                let dataURL = state.redoList.pop()\n                state.undoList.push(state.canvas.toDataURL())\n                let img = new Image()\n                img.src = dataURL\n                img.onload = () => {\n                    if (canvas) {\n                        ctx?.clearRect(0, 0, canvas.width, canvas.height)\n                        ctx?.drawImage(img, 0, 0, canvas.width, canvas.height)\n                    }\n                }\n            }\n        }\n    }\n})\n\nexport default canvasSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}