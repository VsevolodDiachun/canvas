{"ast":null,"code":"import Tool from \"./Tool\";\nexport default class Line extends Tool {\n  constructor(canvas, socket, id) {\n    super(canvas, socket, id);\n    this.name = void 0;\n    this.mouseDown = void 0;\n    this.currentX = void 0;\n    this.currentY = void 0;\n    this.saved = void 0;\n    this.startX = void 0;\n    this.startY = void 0;\n    this.listen();\n    this.name = 'Line';\n  }\n  listen() {\n    this.canvas.onmousedown = this.mouseDownHandler.bind(this);\n    this.canvas.onmouseup = this.mouseUpHandler.bind(this);\n    this.canvas.onmousemove = this.mouseMoveHandler.bind(this);\n  }\n  mouseDownHandler(e) {\n    this.mouseDown = true;\n    this.currentX = e.pageX - e.target.offsetLeft;\n    this.currentY = e.pageY - e.target.offsetTop;\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.currentX, this.currentY);\n    this.saved = this.canvas.toDataURL();\n  }\n  mouseUpHandler(e) {\n    this.mouseDown = false;\n    if (this.socket) {\n      let currentX = e.pageX - e.target.offsetLeft;\n      let currentY = e.pageY - e.target.offsetTop;\n\n      // Відправка об'єкта для прямої лінії\n      this.socket.send(JSON.stringify({\n        method: 'draw',\n        id: this.id,\n        figure: {\n          type: 'line',\n          start: {\n            x: this.startX,\n            y: this.startY\n          },\n          end: {\n            x: currentX,\n            y: currentY\n          }\n        }\n      }));\n    }\n  }\n  mouseMoveHandler(e) {\n    if (this.mouseDown) {\n      this.draw(e.pageX - e.target.offsetLeft, e.pageY - e.target.offsetTop);\n    }\n  }\n  draw(x, y) {\n    const img = new Image();\n    img.src = this.saved;\n    img.onload = async () => {\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n      this.ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height);\n      this.ctx.beginPath();\n      this.ctx.moveTo(this.currentX, this.currentY);\n      this.ctx.lineTo(x, y);\n      this.ctx.stroke();\n    };\n  }\n  static drawStatic(ctx, x, y) {\n    ctx.lineTo(x, y);\n    ctx.stroke();\n  }\n}","map":{"version":3,"names":["Tool","Line","constructor","canvas","socket","id","name","mouseDown","currentX","currentY","saved","startX","startY","listen","onmousedown","mouseDownHandler","bind","onmouseup","mouseUpHandler","onmousemove","mouseMoveHandler","e","pageX","target","offsetLeft","pageY","offsetTop","ctx","beginPath","moveTo","toDataURL","send","JSON","stringify","method","figure","type","start","x","y","end","draw","img","Image","src","onload","clearRect","width","height","drawImage","lineTo","stroke","drawStatic"],"sources":["/Users/diachun/WebstormProjects/canvas/client/src/tools/Line.ts"],"sourcesContent":["import { eventMouseHandler } from \"../models/eventMouseHandler\";\nimport Tool from \"./Tool\";\n\nexport default class Line extends Tool {\n    name: string;\n    mouseDown: boolean | undefined;\n    currentX: number | undefined;\n    currentY: number | undefined;\n    saved: any;\n    startX: number | undefined;\n    startY: number | undefined;\n\n    constructor(canvas: any, socket: WebSocket, id: string | null) {\n        super(canvas, socket, id);\n        this.listen()\n        this.name = 'Line'\n    }\n\n    listen() {\n        this.canvas.onmousedown = this.mouseDownHandler.bind(this)\n        this.canvas.onmouseup = this.mouseUpHandler.bind(this)\n        this.canvas.onmousemove = this.mouseMoveHandler.bind(this)\n    }\n\n    mouseDownHandler(e: eventMouseHandler) {\n        this.mouseDown = true\n        this.currentX = e.pageX-e.target.offsetLeft\n        this.currentY = e.pageY-e.target.offsetTop\n        this.ctx.beginPath()\n        this.ctx.moveTo(this.currentX, this.currentY )\n        this.saved = this.canvas.toDataURL()\n    }\n\n    mouseUpHandler(e: eventMouseHandler) {\n        this.mouseDown = false\n        if (this.socket) {\n            let currentX = e.pageX - e.target.offsetLeft;\n            let currentY = e.pageY - e.target.offsetTop;\n\n            // Відправка об'єкта для прямої лінії\n            this.socket.send(JSON.stringify({\n                method: 'draw',\n                id: this.id,\n                figure: {\n                    type: 'line',\n                    start: { x: this.startX, y: this.startY },\n                    end: { x: currentX, y: currentY }\n                }\n            }));\n        }\n    }\n\n    mouseMoveHandler(e: eventMouseHandler) {\n        if (this.mouseDown) {\n            this.draw(e.pageX-e.target.offsetLeft, e.pageY-e.target.offsetTop);\n        }\n    }\n\n    draw(x: number,y: number) {\n        const img = new Image()\n        img.src = this.saved\n        img.onload = async () => {\n            this.ctx.clearRect(0,0, this.canvas.width, this.canvas.height)\n            this.ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height)\n            this.ctx.beginPath()\n            this.ctx.moveTo(this.currentX, this.currentY )\n            this.ctx.lineTo(x, y)\n            this.ctx.stroke()\n        }\n    }\n\n    static drawStatic(ctx: any, x: number,y: number) {\n        ctx.lineTo(x, y)\n        ctx.stroke()\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}