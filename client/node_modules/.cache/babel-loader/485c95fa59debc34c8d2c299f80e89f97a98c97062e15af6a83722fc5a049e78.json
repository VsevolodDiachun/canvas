{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  canvas: null,\n  undoList: [],\n  redoList: []\n};\nexport const canvasSlice = createSlice({\n  name: 'canvas',\n  initialState,\n  reducers: {\n    setCanvas(state, action) {\n      state.canvas = action.payload;\n    },\n    pushToUndo(state, action) {\n      state.undoList.push(action.payload);\n    },\n    pushToRedo(state, action) {\n      state.redoList.push(action.payload);\n    },\n    undo(state) {\n      var _state$canvas;\n      const ctx = (_state$canvas = state.canvas) === null || _state$canvas === void 0 ? void 0 : _state$canvas.getContext('2d');\n      const canvas = state.canvas;\n      if (state.undoList.length > 0 && state.canvas) {\n        let dataURL = state.undoList.pop();\n        state.redoList.push(state.canvas.toDataURL());\n        let img = new Image();\n        img.src = dataURL;\n        img.onload = () => {\n          if (canvas) {\n            ctx === null || ctx === void 0 ? void 0 : ctx.clearRect(0, 0, canvas.width, canvas.height);\n            ctx === null || ctx === void 0 ? void 0 : ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n          }\n        };\n      } else {\n        if (state.canvas) ctx === null || ctx === void 0 ? void 0 : ctx.clearRect(0, 0, state.canvas.width, state.canvas.height);\n      }\n    },\n    redo(state) {\n      var _state$canvas2;\n      const ctx = (_state$canvas2 = state.canvas) === null || _state$canvas2 === void 0 ? void 0 : _state$canvas2.getContext('2d');\n      const canvas = state.canvas;\n      if (state.redoList.length > 0 && state.canvas) {\n        let dataURL = state.redoList.pop();\n        state.undoList.push(state.canvas.toDataURL());\n        let img = new Image();\n        img.src = dataURL;\n        img.onload = () => {\n          if (canvas) {\n            ctx === null || ctx === void 0 ? void 0 : ctx.clearRect(0, 0, canvas.width, canvas.height);\n            ctx === null || ctx === void 0 ? void 0 : ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n          }\n        };\n      }\n    }\n  }\n});\nexport default canvasSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","canvas","undoList","redoList","canvasSlice","name","reducers","setCanvas","state","action","payload","pushToUndo","push","pushToRedo","undo","_state$canvas","ctx","getContext","length","dataURL","pop","toDataURL","img","Image","src","onload","clearRect","width","height","drawImage","redo","_state$canvas2","reducer"],"sources":["/Users/diachun/WebstormProjects/canvas/client/src/store/reducers/CanvasSlice.ts"],"sourcesContent":["import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\n\ninterface CanvasState {\n      canvas: HTMLCanvasElement | null;\n      undoList: any;\n      redoList: any\n}\n\nconst initialState: CanvasState = {\n      canvas: null,\n      undoList: [],\n      redoList: []\n\n}\n\nexport const canvasSlice = createSlice({\n    name: 'canvas',\n    initialState,\n    reducers: {\n      setCanvas(state, action: PayloadAction<any>){\t\t\t\t\t\t\n            state.canvas = action.payload\n      },\n      pushToUndo(state, action: PayloadAction<any>) {\n            state.undoList.push(action.payload)\n      },\n      pushToRedo(state, action: PayloadAction<any>) {\n            state.redoList.push(action.payload)\n      },\n      undo(state) {\n            const ctx = state.canvas?.getContext('2d')\n            const canvas = state.canvas\n            if (state.undoList.length > 0 && state.canvas) {\n                let dataURL = state.undoList.pop()\n                state.redoList.push(state.canvas.toDataURL())\n                let img = new Image()\n                img.src = dataURL\n                img.onload = () => {\n                    if (canvas) {\n                        ctx?.clearRect(0, 0, canvas.width, canvas.height)\n                        ctx?.drawImage(img, 0, 0, canvas.width, canvas.height)\n                    }\n                }\n            } else {\n                  if(state.canvas) ctx?.clearRect(0, 0, state.canvas.width, state.canvas.height)\n      \n            }\n      },\n        redo(state) {\n            const ctx = state.canvas?.getContext('2d')\n            const canvas = state.canvas\n            if (state.redoList.length > 0 && state.canvas) {\n                let dataURL = state.redoList.pop()\n                state.undoList.push(state.canvas.toDataURL())\n                let img = new Image()\n                img.src = dataURL\n                img.onload = () => {\n                    if (canvas) {\n                        ctx?.clearRect(0, 0, canvas.width, canvas.height)\n                        ctx?.drawImage(img, 0, 0, canvas.width, canvas.height)\n                    }\n                }\n            }\n        }\n    }\n})\n\nexport default canvasSlice.reducer"],"mappings":"AAAA,SAAQA,WAAW,QAAsB,kBAAkB;AAQ3D,MAAMC,YAAyB,GAAG;EAC5BC,MAAM,EAAE,IAAI;EACZC,QAAQ,EAAE,EAAE;EACZC,QAAQ,EAAE;AAEhB,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGL,WAAW,CAAC;EACnCM,IAAI,EAAE,QAAQ;EACdL,YAAY;EACZM,QAAQ,EAAE;IACRC,SAASA,CAACC,KAAK,EAAEC,MAA0B,EAAC;MACtCD,KAAK,CAACP,MAAM,GAAGQ,MAAM,CAACC,OAAO;IACnC,CAAC;IACDC,UAAUA,CAACH,KAAK,EAAEC,MAA0B,EAAE;MACxCD,KAAK,CAACN,QAAQ,CAACU,IAAI,CAACH,MAAM,CAACC,OAAO,CAAC;IACzC,CAAC;IACDG,UAAUA,CAACL,KAAK,EAAEC,MAA0B,EAAE;MACxCD,KAAK,CAACL,QAAQ,CAACS,IAAI,CAACH,MAAM,CAACC,OAAO,CAAC;IACzC,CAAC;IACDI,IAAIA,CAACN,KAAK,EAAE;MAAA,IAAAO,aAAA;MACN,MAAMC,GAAG,IAAAD,aAAA,GAAGP,KAAK,CAACP,MAAM,cAAAc,aAAA,uBAAZA,aAAA,CAAcE,UAAU,CAAC,IAAI,CAAC;MAC1C,MAAMhB,MAAM,GAAGO,KAAK,CAACP,MAAM;MAC3B,IAAIO,KAAK,CAACN,QAAQ,CAACgB,MAAM,GAAG,CAAC,IAAIV,KAAK,CAACP,MAAM,EAAE;QAC3C,IAAIkB,OAAO,GAAGX,KAAK,CAACN,QAAQ,CAACkB,GAAG,CAAC,CAAC;QAClCZ,KAAK,CAACL,QAAQ,CAACS,IAAI,CAACJ,KAAK,CAACP,MAAM,CAACoB,SAAS,CAAC,CAAC,CAAC;QAC7C,IAAIC,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;QACrBD,GAAG,CAACE,GAAG,GAAGL,OAAO;QACjBG,GAAG,CAACG,MAAM,GAAG,MAAM;UACf,IAAIxB,MAAM,EAAE;YACRe,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEU,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEzB,MAAM,CAAC0B,KAAK,EAAE1B,MAAM,CAAC2B,MAAM,CAAC;YACjDZ,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEa,SAAS,CAACP,GAAG,EAAE,CAAC,EAAE,CAAC,EAAErB,MAAM,CAAC0B,KAAK,EAAE1B,MAAM,CAAC2B,MAAM,CAAC;UAC1D;QACJ,CAAC;MACL,CAAC,MAAM;QACD,IAAGpB,KAAK,CAACP,MAAM,EAAEe,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEU,SAAS,CAAC,CAAC,EAAE,CAAC,EAAElB,KAAK,CAACP,MAAM,CAAC0B,KAAK,EAAEnB,KAAK,CAACP,MAAM,CAAC2B,MAAM,CAAC;MAEpF;IACN,CAAC;IACCE,IAAIA,CAACtB,KAAK,EAAE;MAAA,IAAAuB,cAAA;MACR,MAAMf,GAAG,IAAAe,cAAA,GAAGvB,KAAK,CAACP,MAAM,cAAA8B,cAAA,uBAAZA,cAAA,CAAcd,UAAU,CAAC,IAAI,CAAC;MAC1C,MAAMhB,MAAM,GAAGO,KAAK,CAACP,MAAM;MAC3B,IAAIO,KAAK,CAACL,QAAQ,CAACe,MAAM,GAAG,CAAC,IAAIV,KAAK,CAACP,MAAM,EAAE;QAC3C,IAAIkB,OAAO,GAAGX,KAAK,CAACL,QAAQ,CAACiB,GAAG,CAAC,CAAC;QAClCZ,KAAK,CAACN,QAAQ,CAACU,IAAI,CAACJ,KAAK,CAACP,MAAM,CAACoB,SAAS,CAAC,CAAC,CAAC;QAC7C,IAAIC,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;QACrBD,GAAG,CAACE,GAAG,GAAGL,OAAO;QACjBG,GAAG,CAACG,MAAM,GAAG,MAAM;UACf,IAAIxB,MAAM,EAAE;YACRe,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEU,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEzB,MAAM,CAAC0B,KAAK,EAAE1B,MAAM,CAAC2B,MAAM,CAAC;YACjDZ,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEa,SAAS,CAACP,GAAG,EAAE,CAAC,EAAE,CAAC,EAAErB,MAAM,CAAC0B,KAAK,EAAE1B,MAAM,CAAC2B,MAAM,CAAC;UAC1D;QACJ,CAAC;MACL;IACJ;EACJ;AACJ,CAAC,CAAC;AAEF,eAAexB,WAAW,CAAC4B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}