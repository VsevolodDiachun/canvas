{"ast":null,"code":"import Tool from \"./Tool\";\nimport { finishDrawMessage } from \"../hooks/finishDrawMessage\";\nexport default class Rect extends Tool {\n  constructor(canvas, socket, id) {\n    super(canvas, socket, id);\n    this.mouseDown = void 0;\n    this.startX = void 0;\n    this.startY = void 0;\n    this.saved = void 0;\n    this.width = void 0;\n    this.height = void 0;\n    this.currentX = void 0;\n    this.currentY = void 0;\n    this.listen();\n  }\n  listen() {\n    this.canvas.onmousemove = this.mouseMoveHandler.bind(this);\n    this.canvas.onmousedown = this.mouseDownHandler.bind(this);\n    this.canvas.onmouseup = this.mouseUpHandler.bind(this);\n  }\n  mouseUpHandler() {\n    this.mouseDown = false;\n    if (this.socket) {\n      this.socket.send(JSON.stringify({\n        method: 'draw',\n        id: this.id,\n        figure: {\n          type: 'rect',\n          x: this.startX,\n          y: this.startY,\n          width: this.width,\n          height: this.height,\n          fillColor: this.ctx.fillStyle,\n          strokeColor: this.ctx.strokeStyle\n        }\n      }));\n      this.width = this.height = 0;\n      if (this.socket && this.id) finishDrawMessage(this.socket, this.id);\n    }\n  }\n  mouseDownHandler(e) {\n    this.mouseDown = true;\n    this.ctx.beginPath();\n    this.startX = e.pageX - e.target.offsetLeft;\n    this.startY = e.pageY - e.target.offsetTop;\n    this.saved = this.canvas.toDataURL();\n  }\n  mouseMoveHandler(e) {\n    if (this.mouseDown && this.startX && this.startY) {\n      this.currentX = e.pageX - e.target.offsetLeft;\n      this.currentY = e.pageY - e.target.offsetTop;\n      this.width = this.currentX - this.startX;\n      this.height = this.currentY - this.startY;\n      this.draw(this.startX, this.startY, this.width, this.height);\n    }\n  }\n  draw(x, y, w, h) {\n    const img = new Image();\n    img.src = this.saved;\n    img.onload = () => {\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n      this.ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height);\n      this.ctx.beginPath();\n      this.ctx.rect(x, y, w, h);\n      this.ctx.fill();\n      this.ctx.stroke();\n    };\n  }\n  static staticDraw(ctx, x, y, w, h, fillColor, strokeColor) {\n    if (ctx) {\n      ctx.fillStyle = fillColor;\n      ctx.strokeStyle = strokeColor;\n      ctx.beginPath();\n      ctx.rect(x, y, w, h);\n      ctx.fill();\n      ctx.stroke();\n    }\n  }\n}","map":{"version":3,"names":["Tool","finishDrawMessage","Rect","constructor","canvas","socket","id","mouseDown","startX","startY","saved","width","height","currentX","currentY","listen","onmousemove","mouseMoveHandler","bind","onmousedown","mouseDownHandler","onmouseup","mouseUpHandler","send","JSON","stringify","method","figure","type","x","y","fillColor","ctx","fillStyle","strokeColor","strokeStyle","e","beginPath","pageX","target","offsetLeft","pageY","offsetTop","toDataURL","draw","w","h","img","Image","src","onload","clearRect","drawImage","rect","fill","stroke","staticDraw"],"sources":["/Users/diachun/WebstormProjects/canvas/client/src/tools/Rect.ts"],"sourcesContent":["import { eventMouseHandler } from \"../models/eventMouseHandler\";\nimport Tool from \"./Tool\";\nimport {WebSocketType} from \"../utils/consts\";\nimport {finishDrawMessage} from \"../hooks/finishDrawMessage\";\n\nexport default class Rect extends Tool {\n    mouseDown: boolean | undefined;\n    startX: number | undefined;\n    startY: number | undefined;\n    saved: any;\n    width: number | undefined;\n    height: number | undefined;\n    currentX: number | undefined;\n    currentY: number | undefined;\n    constructor(canvas: HTMLCanvasElement, socket: WebSocketType, id: string | null) {\n        super(canvas, socket, id)\n        this.listen()\n    }\n\n    listen() {\n        this.canvas.onmousemove = this.mouseMoveHandler.bind(this)\n        this.canvas.onmousedown = this.mouseDownHandler.bind(this)\n        this.canvas.onmouseup = this.mouseUpHandler.bind(this)\n    }\n\n    mouseUpHandler() {\n        this.mouseDown = false\n        if (this.socket) {\n            this.socket.send(JSON.stringify({\n                method: 'draw',\n                id: this.id,\n                figure: {\n                    type: 'rect',\n                    x: this.startX,\n                    y: this.startY,\n                    width: this.width,\n                    height: this.height,\n                    fillColor: this.ctx.fillStyle,\n                    strokeColor: this.ctx.strokeStyle\n                }\n            }))\n            this.width = this.height = 0\n            if (this.socket && this.id) finishDrawMessage(this.socket, this.id)\n        }\n    }\n    mouseDownHandler(e: eventMouseHandler) {\n        this.mouseDown = true\n        this.ctx.beginPath()\n        this.startX = e.pageX - e.target.offsetLeft\n        this.startY = e.pageY - e.target.offsetTop\n        this.saved = this.canvas.toDataURL()\n    }\n    mouseMoveHandler(e: eventMouseHandler) {\n        if (this.mouseDown && this.startX && this.startY) {\n            this.currentX = e.pageX - e.target.offsetLeft\n            this.currentY = e.pageY - e.target.offsetTop\n            this.width = this.currentX - this.startX\n            this.height = this.currentY - this.startY\n            this.draw(this.startX, this.startY, this.width, this.height)\n        }\n    }\n\n    draw(x: number, y: number, w: number, h: number) {\n        const img = new Image()\n        img.src = this.saved\n        img.onload = () => {\n            this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n            this.ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height)\n            this.ctx.beginPath()\n            this.ctx.rect(x, y, w, h)\n            this.ctx.fill()\n            this.ctx.stroke()\n        }\n    }\n\n    static staticDraw(ctx: CanvasRenderingContext2D | null | undefined, x: number, y: number, w: number, h: number, fillColor: string, strokeColor: string) {\n        if (ctx) {\n            ctx.fillStyle = fillColor\n            ctx.strokeStyle = strokeColor\n            ctx.beginPath()\n            ctx.rect(x, y, w, h)\n            ctx.fill()\n            ctx.stroke()\n        }\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}