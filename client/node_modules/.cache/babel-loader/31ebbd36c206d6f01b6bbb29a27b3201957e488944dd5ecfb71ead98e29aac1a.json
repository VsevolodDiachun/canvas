{"ast":null,"code":"var _jsxFileName = \"/Users/diachun/WebstormProjects/canvas/client/src/components/Canvas.tsx\",\n  _s = $RefreshSig$();\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useRef, useState } from 'react';\nimport style from '../styles/canvas.module.scss';\nimport { useAppDispatch, useAppSelector } from '../hooks/redux';\nimport { canvasSlice } from '../store/reducers/CanvasSlice';\nimport { toolSlice } from '../store/reducers/ToolSlice';\nimport Brush from '../tools/Brush';\nimport { Button, Form, InputGroup, Modal } from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\nimport Rect from \"../tools/Rect\";\nimport Eraser from \"../tools/Eraser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Canvas = socket => {\n  _s();\n  const {\n    setCanvas,\n    pushToUndo,\n    setUsername,\n    setSocket,\n    setSessionId\n  } = canvasSlice.actions;\n  const {\n    setTool\n  } = toolSlice.actions;\n  const {\n    username\n  } = useAppSelector(state => state.canvasReducer);\n  const dispatch = useAppDispatch();\n  const [modal, setModal] = useState(true);\n  const [usernameRef, setUsernameRef] = useState('');\n  const canvasRef = useRef(null);\n  //const usernameRef = useRef<HTMLInputElement | null>(null)\n  const params = useParams();\n\n  // useEffect(() => {\n  //       // const canvasGetContext = canvasRef.current?.getContext('2d')\n  //       // const contextToDataURL = canvasRef.current?.toDataURL()\n  //       // if (canvasRef.current) {\n  //       //       dispatch(setCanvas(getDocQSCanvas))\n  //       // }\n  // }, [])\n\n  useEffect(() => {\n    //const socket = new WebSocket('ws://localhost:5001')\n    if (username && socket && params.id) {\n      dispatch(setSocket(socket));\n      dispatch(setSessionId(params.id));\n      dispatch(setTool(new Brush(canvasRef.current, socket, params.id)));\n      socket.onopen = () => {\n        socket.send(JSON.stringify({\n          id: params.id,\n          username,\n          method: 'connection'\n        }));\n      };\n      socket.onmessage = event => {\n        let msg = JSON.parse(event.data);\n        //console.log(msg.figure)\n        switch (msg.method) {\n          case 'connection':\n            console.log(`User ${msg.username} joined`);\n            break;\n          case 'draw':\n            drawHandler(msg);\n            break;\n        }\n      };\n    }\n  }, [username]);\n  const drawHandler = msg => {\n    var _canvasRef$current;\n    const figure = msg.figure;\n    const ctx = (_canvasRef$current = canvasRef.current) === null || _canvasRef$current === void 0 ? void 0 : _canvasRef$current.getContext('2d');\n    switch (figure.type) {\n      case 'brush':\n        Brush.draw(ctx, figure.x, figure.y);\n        //console.log('brush')\n        break;\n      case 'rect':\n        Rect.staticDraw(ctx, figure.x, figure.y, figure.width, figure.height);\n        //console.log('rect')\n        break;\n      case 'eraser':\n        Eraser.drawEraser(ctx, figure.x, figure.y);\n        //console.log('eraser')\n        break;\n      case 'finish':\n        if (ctx) ctx.beginPath();\n        break;\n    }\n  };\n  const mouseDownHandler = () => {\n    var _canvasRef$current2;\n    dispatch(pushToUndo((_canvasRef$current2 = canvasRef.current) === null || _canvasRef$current2 === void 0 ? void 0 : _canvasRef$current2.toDataURL()));\n  };\n  const connectHandler = () => {\n    if (usernameRef) {\n      dispatch(setUsername(usernameRef));\n      setModal(false);\n    }\n  };\n\n  // useEffect(() => {\n  //       console.log(usernameRef.current?.value)\n  // }, [usernameRef.current?.value])\n  //console.log(usernameRef.current?.value)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.canvas,\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      show: modal,\n      onHide: () => {},\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Enter you name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(InputGroup, {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            placeholder: \"Username\"\n            //ref={usernameRef}\n            ,\n            value: usernameRef,\n            onChange: e => setUsernameRef(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: usernameRef ? \"primary\" : 'secondary',\n          onClick: () => connectHandler(),\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"canvas\",\n      onMouseDown: () => mouseDownHandler(),\n      ref: canvasRef,\n      width: 1000,\n      height: 600\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 13\n  }, this);\n};\n_s(Canvas, \"fjm4y4LNuiPpBH5gCQTTlPOHCIc=\", false, function () {\n  return [useAppSelector, useAppDispatch, useParams];\n});\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useEffect","useRef","useState","style","useAppDispatch","useAppSelector","canvasSlice","toolSlice","Brush","Button","Form","InputGroup","Modal","useParams","Rect","Eraser","jsxDEV","_jsxDEV","Canvas","socket","_s","setCanvas","pushToUndo","setUsername","setSocket","setSessionId","actions","setTool","username","state","canvasReducer","dispatch","modal","setModal","usernameRef","setUsernameRef","canvasRef","params","id","current","onopen","send","JSON","stringify","method","onmessage","event","msg","parse","data","console","log","drawHandler","_canvasRef$current","figure","ctx","getContext","type","draw","x","y","staticDraw","width","height","drawEraser","beginPath","mouseDownHandler","_canvasRef$current2","toDataURL","connectHandler","className","canvas","children","show","onHide","Header","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","Control","placeholder","value","onChange","e","target","Footer","variant","onClick","onMouseDown","ref","_c","$RefreshReg$"],"sources":["/Users/diachun/WebstormProjects/canvas/client/src/components/Canvas.tsx"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, {FC, useEffect, useRef, useState} from 'react';\nimport style from '../styles/canvas.module.scss'\nimport {useAppDispatch, useAppSelector} from '../hooks/redux';\nimport {canvasSlice} from '../store/reducers/CanvasSlice';\nimport {toolSlice} from '../store/reducers/ToolSlice';\nimport Brush from '../tools/Brush';\nimport {Button, Form, InputGroup, Modal} from \"react-bootstrap\";\nimport {useParams} from \"react-router-dom\";\nimport Rect from \"../tools/Rect\";\nimport Eraser from \"../tools/Eraser\";\nimport {getDocQSCanvas} from \"../hooks/getDocQSCanvas\";\n\nconst Canvas: FC<any> = (socket) => {\n      const {setCanvas, pushToUndo, setUsername, setSocket, setSessionId} = canvasSlice.actions\n      const {setTool} = toolSlice.actions\n      const {username} = useAppSelector(state => state.canvasReducer)\n      const dispatch = useAppDispatch()\n      const [modal, setModal] = useState(true)\n      const [usernameRef, setUsernameRef] = useState<string>('')\n      const canvasRef = useRef<HTMLCanvasElement | null>(null)\n      //const usernameRef = useRef<HTMLInputElement | null>(null)\n      const params= useParams()\n\n      // useEffect(() => {\n      //       // const canvasGetContext = canvasRef.current?.getContext('2d')\n      //       // const contextToDataURL = canvasRef.current?.toDataURL()\n      //       // if (canvasRef.current) {\n      //       //       dispatch(setCanvas(getDocQSCanvas))\n      //       // }\n      // }, [])\n\n      useEffect(() => {\n            //const socket = new WebSocket('ws://localhost:5001')\n            if (username && socket && params.id) {\n                  dispatch(setSocket(socket))\n                  dispatch(setSessionId(params.id))\n                  dispatch(setTool(new Brush(canvasRef.current, socket, params.id)))\n                  socket.onopen = () => {\n                        socket.send(JSON.stringify({\n                              id: params.id,\n                              username,\n                              method: 'connection'\n                        }))\n                  }\n                  socket.onmessage = (event: MessageEvent) => {\n                        let msg = JSON.parse(event.data)\n                        //console.log(msg.figure)\n                        switch (msg.method) {\n                              case 'connection':\n                                    console.log(`User ${msg.username} joined`)\n                                break\n                              case 'draw':\n                                    drawHandler(msg)\n                                break\n                        }\n                  }\n            }\n      }, [username])\n\n      const drawHandler = (msg: any) => {\n            const figure = msg.figure\n            const ctx = canvasRef.current?.getContext('2d')\n            switch (figure.type) {\n                  case 'brush':\n                        Brush.draw(ctx, figure.x, figure.y)\n                        //console.log('brush')\n                        break\n                  case 'rect':\n                        Rect.staticDraw(ctx, figure.x, figure.y, figure.width, figure.height)\n                        //console.log('rect')\n                        break\n                  case 'eraser':\n                        Eraser.drawEraser(ctx, figure.x, figure.y)\n                      //console.log('eraser')\n                        break\n                  case 'finish':\n                        if (ctx) ctx.beginPath()\n                        break\n            }\n      }\n\n      const mouseDownHandler = () => {\n            dispatch(pushToUndo(canvasRef.current?.toDataURL()))\n      }\n\n      const connectHandler = () => {\n            if (usernameRef) {\n                  dispatch(setUsername(usernameRef))\n                  setModal(false)\n            }\n      }\n\n      // useEffect(() => {\n      //       console.log(usernameRef.current?.value)\n      // }, [usernameRef.current?.value])\n      //console.log(usernameRef.current?.value)\n\n      return (\n            <div className={style.canvas}>\n                  <Modal show={modal} onHide={() => {}}>\n                        <Modal.Header>\n                              <Modal.Title>Enter you name</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                              <InputGroup className=\"mb-3\">\n                                    <Form.Control\n                                        placeholder=\"Username\"\n                                        //ref={usernameRef}\n                                        value={usernameRef}\n                                        onChange={(e) => setUsernameRef(e.target.value)}\n                                    />\n                              </InputGroup>\n                        </Modal.Body>\n                        <Modal.Footer>\n                              <Button\n                                  variant={usernameRef ? \"primary\" : 'secondary'}\n                                  onClick={() => connectHandler()}\n                              >\n                                    Login\n                              </Button>\n                        </Modal.Footer>\n                  </Modal>\n                  <canvas \n                        id='canvas'\n                        onMouseDown={() => mouseDownHandler()} \n                        ref={canvasRef} \n                        width={1000} \n                        height={600} \n                  />\n            </div>\n      );\n};\n\nexport default Canvas;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}