{"ast":null,"code":"import Tool from \"./Tool\";\nexport default class Eraser extends Tool {\n  // mouseDown: boolean | undefined;\n  // ctxColorStyle: string;\n  // constructor(canvas: any, socket: WebSocket, id: string | null) {\n  //     super(canvas, socket, id)\n  //     this.listen()\n  //     console.log(this.ctx.strokeStyle)\n  //     this.ctxColorStyle = this.ctx.strokeStyle\n  // }\n  //\n  // listen() {\n  //     this.canvas.onmousemove = this.mouseMoveHandler.bind(this)\n  //     this.canvas.onmousedown = this.mouseDownHandler.bind(this)\n  //     this.canvas.onmouseup = this.mouseUpHandler.bind(this)\n  // }\n  //\n  // mouseUpHandler() {\n  //     this.mouseDown = false\n  //     if (this.socket) {\n  //         this.socket.send(JSON.stringify({\n  //             method: 'draw',\n  //             id: this.id,\n  //             figure: {\n  //                 type: 'finish',\n  //             }\n  //         }))\n  //     }\n  //     this.ctx.strokeStyle = this.ctxColorStyle\n  // }\n  // mouseDownHandler(e: eventMouseHandler) {\n  //     this.mouseDown = true\n  //     this.ctx.beginPath()\n  //     this.ctx.moveTo(e.pageX - e.target.offsetLeft, e.pageY - e.target.offsetTop)\n  // }\n  // mouseMoveHandler(e: eventMouseHandler) {\n  //     if (this.mouseDown && this.socket) {\n  //         //this.draw(e.pageX - e.target.offsetLeft, e.pageY - e.target.offsetTop)\n  //         this.socket.send(JSON.stringify({\n  //             method: 'draw',\n  //             id: this.id,\n  //             figure: {\n  //                 type: 'eraser',\n  //                 x: e.pageX - e.target.offsetLeft,\n  //                 y: e.pageY - e.target.offsetTop\n  //             }\n  //         }))\n  //         this.ctx.strokeStyle = 'white'\n  //     }\n  // }\n\n  // draw(x: number, y: number) {\n  //     //this.ctx.strokeStyle = \"white\"\n  //     this.ctx.lineTo(x, y)\n  //     this.ctx.stroke()\n  // }\n\n  static drawEraser(ctx, x, y, lineWidth, figureType) {\n    //ctx.strokeStyle = \"white\"\n    if (ctx) {\n      if (figureType === 'eraser') {\n        ctx.strokeStyle = 'white';\n      }\n      ctx.lineWidth = lineWidth;\n      ctx.lineTo(x, y);\n      ctx.stroke();\n    }\n  }\n}","map":{"version":3,"names":["Tool","Eraser","drawEraser","ctx","x","y","lineWidth","figureType","strokeStyle","lineTo","stroke"],"sources":["/Users/diachun/WebstormProjects/canvas/client/src/tools/Eraser.ts"],"sourcesContent":["import {eventMouseHandler} from \"../models/eventMouseHandler\";\nimport Tool from \"./Tool\";\n\nexport default class Eraser extends Tool {\n\n    // mouseDown: boolean | undefined;\n    // ctxColorStyle: string;\n    // constructor(canvas: any, socket: WebSocket, id: string | null) {\n    //     super(canvas, socket, id)\n    //     this.listen()\n    //     console.log(this.ctx.strokeStyle)\n    //     this.ctxColorStyle = this.ctx.strokeStyle\n    // }\n    //\n    // listen() {\n    //     this.canvas.onmousemove = this.mouseMoveHandler.bind(this)\n    //     this.canvas.onmousedown = this.mouseDownHandler.bind(this)\n    //     this.canvas.onmouseup = this.mouseUpHandler.bind(this)\n    // }\n    //\n    // mouseUpHandler() {\n    //     this.mouseDown = false\n    //     if (this.socket) {\n    //         this.socket.send(JSON.stringify({\n    //             method: 'draw',\n    //             id: this.id,\n    //             figure: {\n    //                 type: 'finish',\n    //             }\n    //         }))\n    //     }\n    //     this.ctx.strokeStyle = this.ctxColorStyle\n    // }\n    // mouseDownHandler(e: eventMouseHandler) {\n    //     this.mouseDown = true\n    //     this.ctx.beginPath()\n    //     this.ctx.moveTo(e.pageX - e.target.offsetLeft, e.pageY - e.target.offsetTop)\n    // }\n    // mouseMoveHandler(e: eventMouseHandler) {\n    //     if (this.mouseDown && this.socket) {\n    //         //this.draw(e.pageX - e.target.offsetLeft, e.pageY - e.target.offsetTop)\n    //         this.socket.send(JSON.stringify({\n    //             method: 'draw',\n    //             id: this.id,\n    //             figure: {\n    //                 type: 'eraser',\n    //                 x: e.pageX - e.target.offsetLeft,\n    //                 y: e.pageY - e.target.offsetTop\n    //             }\n    //         }))\n    //         this.ctx.strokeStyle = 'white'\n    //     }\n    // }\n\n    // draw(x: number, y: number) {\n    //     //this.ctx.strokeStyle = \"white\"\n    //     this.ctx.lineTo(x, y)\n    //     this.ctx.stroke()\n    // }\n\n    static drawEraser(ctx: CanvasRenderingContext2D | null | undefined, x: number, y: number, lineWidth: number, figureType: string) {\n        //ctx.strokeStyle = \"white\"\n        if (ctx) {\n            if (figureType === 'eraser') {\n                ctx.strokeStyle = 'white'\n            }\n            ctx.lineWidth = lineWidth\n            ctx.lineTo(x, y)\n            ctx.stroke()\n        }\n    }\n}"],"mappings":"AACA,OAAOA,IAAI,MAAM,QAAQ;AAEzB,eAAe,MAAMC,MAAM,SAASD,IAAI,CAAC;EAErC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA,OAAOE,UAAUA,CAACC,GAAgD,EAAEC,CAAS,EAAEC,CAAS,EAAEC,SAAiB,EAAEC,UAAkB,EAAE;IAC7H;IACA,IAAIJ,GAAG,EAAE;MACL,IAAII,UAAU,KAAK,QAAQ,EAAE;QACzBJ,GAAG,CAACK,WAAW,GAAG,OAAO;MAC7B;MACAL,GAAG,CAACG,SAAS,GAAGA,SAAS;MACzBH,GAAG,CAACM,MAAM,CAACL,CAAC,EAAEC,CAAC,CAAC;MAChBF,GAAG,CAACO,MAAM,CAAC,CAAC;IAChB;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}