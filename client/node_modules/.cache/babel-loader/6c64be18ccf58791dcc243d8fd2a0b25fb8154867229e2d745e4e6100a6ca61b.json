{"ast":null,"code":"var _jsxFileName = \"/Users/diachun/WebstormProjects/canvas/client/src/components/Canvas.tsx\",\n  _s = $RefreshSig$();\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useRef, useState } from 'react';\nimport style from '../styles/canvas.module.scss';\nimport { useAppDispatch, useAppSelector } from '../hooks/redux';\nimport { canvasSlice } from '../store/reducers/CanvasSlice';\nimport { toolSlice } from '../store/reducers/ToolSlice';\nimport Brush from '../tools/Brush';\nimport { Button, Form, InputGroup, Modal } from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\nimport Rect from \"../tools/Rect\";\nimport Eraser from \"../tools/Eraser\";\nimport Circle from \"../tools/Circle\";\nimport Line from \"../tools/Line\";\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Canvas = () => {\n  _s();\n  const {\n    pushToUndo,\n    setUsername,\n    setSocket,\n    setSessionId,\n    setCanvas\n  } = canvasSlice.actions;\n  const {\n    setTool,\n    updateColor\n  } = toolSlice.actions;\n  const {\n    username\n  } = useAppSelector(state => state.canvasReducer);\n  const {\n    strokeColorValue,\n    fillColorValue,\n    lineWidthValue\n  } = useAppSelector(state => state.toolReducer);\n  const dispatch = useAppDispatch();\n  const [modal, setModal] = useState(true);\n  const [usernameState, setUsernameState] = useState('');\n  const canvasRef = useRef(null);\n  const params = useParams();\n  useEffect(() => {\n    if (canvasRef.current) {\n      dispatch(setCanvas(canvasRef.current));\n    }\n  }, []);\n  useEffect(() => {\n    const socket = new WebSocket('ws://localhost:5001');\n    if (username && socket && params.id) {\n      dispatch(setSocket(socket));\n      dispatch(setSessionId(params.id));\n      dispatch(setTool(new Brush(canvasRef.current, socket, params.id)));\n      socket.onopen = () => {\n        socket.send(JSON.stringify({\n          id: params.id,\n          username,\n          method: 'connection'\n        }));\n      };\n      socket.onmessage = event => {\n        let msg = JSON.parse(event.data);\n        //console.log(msg.figure)\n        switch (msg.method) {\n          case 'connection':\n            toast.info(`User ${msg.username} joined`, {\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              theme: \"colored\"\n            });\n            break;\n          case 'draw':\n            drawHandler(msg);\n            break;\n        }\n      };\n    }\n  }, [username]);\n  const drawHandler = msg => {\n    var _canvasRef$current;\n    const figure = msg.figure;\n    const ctx = (_canvasRef$current = canvasRef.current) === null || _canvasRef$current === void 0 ? void 0 : _canvasRef$current.getContext('2d');\n    switch (figure.type) {\n      case 'brush':\n        Brush.draw(ctx, figure.x, figure.y, figure.fillColor, figure.strokeColor, figure.lineWidth);\n        //console.log('brush')\n        break;\n      case 'line':\n        Line.drawStatic(ctx, figure.start, figure.end, figure.fillColor, figure.strokeColor, figure.lineWidth);\n        //console.log('brush')\n        break;\n      case 'rect':\n        Rect.staticDraw(ctx, figure.x, figure.y, figure.width, figure.height, figure.fillColor, figure.strokeColor, figure.lineWidth);\n        break;\n      case 'circle':\n        Circle.staticDraw(ctx, figure.x, figure.y, figure.r, figure.fillColor, figure.strokeColor, figure.lineWidth);\n        break;\n      case 'eraser':\n        //Brush.draw(ctx, figure.x, figure.y, figure.fillColor, figure.strokeColor, figure.lineWidth, figure.type)\n        Eraser.drawEraser(ctx, figure.x, figure.y, figure.lineWidth, figure.type);\n        //console.log('eraser')\n        break;\n      case 'finish':\n        if (ctx) ctx.beginPath();\n        break;\n    }\n  };\n  const mouseDownHandler = () => {\n    var _canvasRef$current2;\n    dispatch(updateColor({\n      strokeColorValue,\n      fillColorValue,\n      lineWidthValue\n    }));\n    dispatch(pushToUndo((_canvasRef$current2 = canvasRef.current) === null || _canvasRef$current2 === void 0 ? void 0 : _canvasRef$current2.toDataURL()));\n  };\n  const connectHandler = () => {\n    if (usernameState) {\n      dispatch(setUsername(usernameState));\n      setModal(false);\n    }\n  };\n\n  // useEffect(() => {\n  //       console.log(usernameRef.current?.value)\n  // }, [usernameRef.current?.value])\n  //console.log(usernameRef.current?.value)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.canvas,\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      show: modal,\n      onHide: () => {},\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Enter you name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(InputGroup, {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            placeholder: \"Username\"\n            //ref={usernameRef}\n            ,\n            value: usernameState,\n            onChange: e => setUsernameState(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: username ? \"primary\" : 'secondary',\n          onClick: () => connectHandler(),\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"canvas\",\n      onMouseDown: () => mouseDownHandler(),\n      ref: canvasRef,\n      width: 1000,\n      height: 600\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 13\n  }, this);\n};\n_s(Canvas, \"1lrXIcefjCEnkrBD/VEh57Yjj3o=\", false, function () {\n  return [useAppSelector, useAppSelector, useAppDispatch, useParams];\n});\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useEffect","useRef","useState","style","useAppDispatch","useAppSelector","canvasSlice","toolSlice","Brush","Button","Form","InputGroup","Modal","useParams","Rect","Eraser","Circle","Line","toast","jsxDEV","_jsxDEV","Canvas","_s","pushToUndo","setUsername","setSocket","setSessionId","setCanvas","actions","setTool","updateColor","username","state","canvasReducer","strokeColorValue","fillColorValue","lineWidthValue","toolReducer","dispatch","modal","setModal","usernameState","setUsernameState","canvasRef","params","current","socket","WebSocket","id","onopen","send","JSON","stringify","method","onmessage","event","msg","parse","data","info","closeOnClick","pauseOnHover","draggable","theme","drawHandler","_canvasRef$current","figure","ctx","getContext","type","draw","x","y","fillColor","strokeColor","lineWidth","drawStatic","start","end","staticDraw","width","height","r","drawEraser","beginPath","mouseDownHandler","_canvasRef$current2","toDataURL","connectHandler","className","canvas","children","show","onHide","Header","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","Control","placeholder","value","onChange","e","target","Footer","variant","onClick","onMouseDown","ref","_c","$RefreshReg$"],"sources":["/Users/diachun/WebstormProjects/canvas/client/src/components/Canvas.tsx"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, {FC, useEffect, useRef, useState} from 'react';\nimport style from '../styles/canvas.module.scss'\nimport {useAppDispatch, useAppSelector} from '../hooks/redux';\nimport {canvasSlice} from '../store/reducers/CanvasSlice';\nimport {toolSlice} from '../store/reducers/ToolSlice';\nimport Brush from '../tools/Brush';\nimport {Button, Form, InputGroup, Modal} from \"react-bootstrap\";\nimport {useParams} from \"react-router-dom\";\nimport Rect from \"../tools/Rect\";\nimport Eraser from \"../tools/Eraser\";\nimport Circle from \"../tools/Circle\";\nimport Line from \"../tools/Line\";\nimport { toast } from 'react-toastify';\n\nconst Canvas: FC = () => {\n      const {pushToUndo, setUsername, setSocket, setSessionId, setCanvas} = canvasSlice.actions\n      const {setTool, updateColor} = toolSlice.actions\n      const {username} = useAppSelector(state => state.canvasReducer)\n      const {strokeColorValue, fillColorValue, lineWidthValue} = useAppSelector(state => state.toolReducer)\n      const dispatch = useAppDispatch()\n      const [modal, setModal] = useState(true)\n      const [usernameState, setUsernameState] = useState<string>('')\n      const canvasRef = useRef<HTMLCanvasElement | null>(null)\n      const params= useParams()\n\n      useEffect(() => {\n            if (canvasRef.current) {\n                  dispatch(setCanvas(canvasRef.current))\n            }\n      }, [])\n\n      useEffect(() => {\n            const socket = new WebSocket('ws://localhost:5001')\n            if (username && socket && params.id) {\n                  dispatch(setSocket(socket))\n                  dispatch(setSessionId(params.id))\n                  dispatch(setTool(new Brush(canvasRef.current, socket, params.id)))\n                  socket.onopen = () => {\n                        socket.send(JSON.stringify({\n                              id: params.id,\n                              username,\n                              method: 'connection'\n                        }))\n                  }\n                  socket.onmessage = (event: MessageEvent) => {\n                        let msg = JSON.parse(event.data)\n                        //console.log(msg.figure)\n                        switch (msg.method) {\n                              case 'connection':\n                                    toast.info(`User ${msg.username} joined`, {\n                                    closeOnClick: true,\n                                        pauseOnHover: true,\n                                        draggable: true,\n                                        theme: \"colored\",\n                              });\n                                break\n                              case 'draw':\n                                    drawHandler(msg)\n                                break\n                        }\n                  }\n            }\n      }, [username])\n\n      const drawHandler = (msg: any) => {\n            const figure = msg.figure\n            const ctx = canvasRef.current?.getContext('2d')\n            switch (figure.type) {\n                  case 'brush':\n                        Brush.draw(ctx, figure.x, figure.y, figure.fillColor, figure.strokeColor, figure.lineWidth)\n                        //console.log('brush')\n                        break\n                  case 'line':\n                        Line.drawStatic(ctx, figure.start, figure.end, figure.fillColor, figure.strokeColor, figure.lineWidth)\n                        //console.log('brush')\n                        break\n                  case 'rect':\n                        Rect.staticDraw(ctx, figure.x, figure.y, figure.width, figure.height, figure.fillColor, figure.strokeColor, figure.lineWidth)\n                        break\n                  case 'circle':\n                        Circle.staticDraw(ctx, figure.x, figure.y, figure.r, figure.fillColor, figure.strokeColor, figure.lineWidth)\n                        break\n                  case 'eraser':\n                        //Brush.draw(ctx, figure.x, figure.y, figure.fillColor, figure.strokeColor, figure.lineWidth, figure.type)\n                        Eraser.drawEraser(ctx, figure.x, figure.y, figure.lineWidth, figure.type)\n                      //console.log('eraser')\n                        break\n                  case 'finish':\n                        if (ctx) ctx.beginPath()\n                        break\n            }\n      }\n\n      const mouseDownHandler = () => {\n            dispatch(updateColor({strokeColorValue, fillColorValue, lineWidthValue}))\n            dispatch(pushToUndo(canvasRef.current?.toDataURL()))\n      }\n\n      const connectHandler = () => {\n            if (usernameState) {\n                  dispatch(setUsername(usernameState))\n                  setModal(false)\n            }\n      }\n\n      // useEffect(() => {\n      //       console.log(usernameRef.current?.value)\n      // }, [usernameRef.current?.value])\n      //console.log(usernameRef.current?.value)\n\n      return (\n            <div className={style.canvas}>\n                  <Modal show={modal} onHide={() => {}}>\n                        <Modal.Header>\n                              <Modal.Title>Enter you name</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                              <InputGroup className=\"mb-3\">\n                                    <Form.Control\n                                        placeholder=\"Username\"\n                                        //ref={usernameRef}\n                                        value={usernameState}\n                                        onChange={(e) => setUsernameState(e.target.value)}\n                                    />\n                              </InputGroup>\n                        </Modal.Body>\n                        <Modal.Footer>\n                              <Button\n                                  variant={username ? \"primary\" : 'secondary'}\n                                  onClick={() => connectHandler()}\n                              >\n                                    Login\n                              </Button>\n                        </Modal.Footer>\n                  </Modal>\n                  <canvas \n                        id='canvas'\n                        onMouseDown={() => mouseDownHandler()} \n                        ref={canvasRef} \n                        width={1000} \n                        height={600} \n                  />\n            </div>\n      );\n};\n\nexport default Canvas;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}