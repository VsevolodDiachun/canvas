{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  tool: {\n    strokeColor: '#000000',\n    fillColor: '#000000',\n    lineWidth: 1\n  },\n  strokeColorValue: '#000000',\n  fillColorValue: '#000000'\n};\nexport const toolSlice = createSlice({\n  name: 'tool',\n  initialState,\n  reducers: {\n    setTool(state, action) {\n      state.tool = action.payload;\n    },\n    setFillColor(state, action) {\n      state.tool.fillColor = action.payload;\n      state.fillColorValue = action.payload;\n    },\n    setStrokeColor(state, action) {\n      state.tool.strokeColor = action.payload;\n      state.strokeColorValue = action.payload;\n    },\n    setLineWidth(state, action) {\n      state.tool.lineWidth = action.payload;\n    },\n    updateColor(state) {\n      state.tool.fillColor = state.fillColorValue;\n      state.tool.strokeColor = state.strokeColorValue;\n    }\n  }\n});\nexport default toolSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","tool","strokeColor","fillColor","lineWidth","strokeColorValue","fillColorValue","toolSlice","name","reducers","setTool","state","action","payload","setFillColor","setStrokeColor","setLineWidth","updateColor","reducer"],"sources":["/Users/diachun/WebstormProjects/canvas/client/src/store/reducers/ToolSlice.ts"],"sourcesContent":["import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\n\ninterface colors {\n    strokeColor: string;\n    fillColor: string;\n    lineWidth: number;\n}\n\ninterface ToolState {\n    tool: colors;\n    strokeColorValue: string;\n    fillColorValue: string;\n}\n\nconst initialState: ToolState = {\n    tool: {\n        strokeColor: '#000000',\n        fillColor: '#000000',\n        lineWidth: 1\n    },\n    strokeColorValue: '#000000',\n    fillColorValue: '#000000'\n}\n\nexport const toolSlice = createSlice({\n    name: 'tool',\n    initialState,\n    reducers: {\n      setTool(state, action: PayloadAction<any>){\t\t\t\t\t\t\n          state.tool = action.payload\n      },\n      setFillColor(state, action: PayloadAction<string>) {\n          state.tool.fillColor = action.payload\n          state.fillColorValue = action.payload\n      },\n      setStrokeColor(state, action: PayloadAction<string>) {\n          state.tool.strokeColor = action.payload\n          state.strokeColorValue = action.payload\n      },\n      setLineWidth(state, action: PayloadAction<number>) {\n          state.tool.lineWidth = action.payload\n      },\n        updateColor(state) {\n            state.tool.fillColor = state.fillColorValue\n            state.tool.strokeColor = state.strokeColorValue\n        }\n    }\n})\n\nexport default toolSlice.reducer"],"mappings":"AAAA,SAAQA,WAAW,QAAsB,kBAAkB;AAc3D,MAAMC,YAAuB,GAAG;EAC5BC,IAAI,EAAE;IACFC,WAAW,EAAE,SAAS;IACtBC,SAAS,EAAE,SAAS;IACpBC,SAAS,EAAE;EACf,CAAC;EACDC,gBAAgB,EAAE,SAAS;EAC3BC,cAAc,EAAE;AACpB,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGR,WAAW,CAAC;EACjCS,IAAI,EAAE,MAAM;EACZR,YAAY;EACZS,QAAQ,EAAE;IACRC,OAAOA,CAACC,KAAK,EAAEC,MAA0B,EAAC;MACtCD,KAAK,CAACV,IAAI,GAAGW,MAAM,CAACC,OAAO;IAC/B,CAAC;IACDC,YAAYA,CAACH,KAAK,EAAEC,MAA6B,EAAE;MAC/CD,KAAK,CAACV,IAAI,CAACE,SAAS,GAAGS,MAAM,CAACC,OAAO;MACrCF,KAAK,CAACL,cAAc,GAAGM,MAAM,CAACC,OAAO;IACzC,CAAC;IACDE,cAAcA,CAACJ,KAAK,EAAEC,MAA6B,EAAE;MACjDD,KAAK,CAACV,IAAI,CAACC,WAAW,GAAGU,MAAM,CAACC,OAAO;MACvCF,KAAK,CAACN,gBAAgB,GAAGO,MAAM,CAACC,OAAO;IAC3C,CAAC;IACDG,YAAYA,CAACL,KAAK,EAAEC,MAA6B,EAAE;MAC/CD,KAAK,CAACV,IAAI,CAACG,SAAS,GAAGQ,MAAM,CAACC,OAAO;IACzC,CAAC;IACCI,WAAWA,CAACN,KAAK,EAAE;MACfA,KAAK,CAACV,IAAI,CAACE,SAAS,GAAGQ,KAAK,CAACL,cAAc;MAC3CK,KAAK,CAACV,IAAI,CAACC,WAAW,GAAGS,KAAK,CAACN,gBAAgB;IACnD;EACJ;AACJ,CAAC,CAAC;AAEF,eAAeE,SAAS,CAACW,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}