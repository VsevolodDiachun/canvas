{"ast":null,"code":"var _jsxFileName = \"/Users/diachun/WebstormProjects/canvas/client/src/components/Toolbar.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport style from '../styles/toolbar.module.scss';\nimport { useAppDispatch, useAppSelector } from '../hooks/redux';\nimport { toolSlice } from '../store/reducers/ToolSlice';\nimport Brush from '../tools/Brush';\nimport Rect from '../tools/Rect';\nimport Circle from '../tools/Circle';\nimport Eraser from '../tools/Erasir';\nimport Line from '../tools/Line';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Toolbar = () => {\n  _s();\n  const {\n    canvas\n  } = useAppSelector(state => state.canvasReducer);\n  const {\n    setTool\n  } = toolSlice.actions;\n  const dispatch = useAppDispatch();\n  const changeColor = () => {\n    dispa;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.toolbar,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: style.toolbar__btn + ' ' + style.brush,\n      onClick: () => dispatch(setTool(new Brush(canvas)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: style.toolbar__btn + ' ' + style.rect,\n      onClick: () => dispatch(setTool(new Rect(canvas)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: style.toolbar__btn + ' ' + style.circle,\n      onClick: () => dispatch(setTool(new Circle(canvas)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: style.toolbar__btn + ' ' + style.eraser,\n      onClick: () => dispatch(setTool(new Eraser(canvas)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: style.toolbar__btn + ' ' + style.line,\n      onClick: () => dispatch(setTool(new Line(canvas)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => changeColor(),\n      className: style.inputColor,\n      type: \"color\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: style.toolbar__btn + ' ' + style.undo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: style.toolbar__btn + ' ' + style.redo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: style.toolbar__btn + ' ' + style.save\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 13\n  }, this);\n};\n_s(Toolbar, \"dF8bKJI+tL6a2ZkJ9CvnsNgvuss=\", false, function () {\n  return [useAppSelector, useAppDispatch];\n});\n_c = Toolbar;\nexport default Toolbar;\nvar _c;\n$RefreshReg$(_c, \"Toolbar\");","map":{"version":3,"names":["React","style","useAppDispatch","useAppSelector","toolSlice","Brush","Rect","Circle","Eraser","Line","jsxDEV","_jsxDEV","Toolbar","_s","canvas","state","canvasReducer","setTool","actions","dispatch","changeColor","dispa","className","toolbar","children","toolbar__btn","brush","onClick","fileName","_jsxFileName","lineNumber","columnNumber","rect","circle","eraser","line","onChange","e","inputColor","type","undo","redo","save","_c","$RefreshReg$"],"sources":["/Users/diachun/WebstormProjects/canvas/client/src/components/Toolbar.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport style from '../styles/toolbar.module.scss';\nimport { useAppDispatch, useAppSelector } from '../hooks/redux';\nimport { toolSlice } from '../store/reducers/ToolSlice';\nimport Brush from '../tools/Brush';\nimport Rect from '../tools/Rect';\nimport Circle from '../tools/Circle';\nimport Eraser from '../tools/Erasir';\nimport Line from '../tools/Line';\n\nconst Toolbar: FC = () => {\n      const {canvas} = useAppSelector(state => state.canvasReducer)\n      const {setTool} = toolSlice.actions\n      const dispatch = useAppDispatch()\n\n      const changeColor = () => {\n            dispa\n      }\n\n      return (\n            <div className={style.toolbar}>\n                  <button className={style.toolbar__btn + ' ' + style.brush} onClick={() => dispatch(setTool(new Brush(canvas)))}/>\n                  <button className={style.toolbar__btn + ' ' + style.rect} onClick={() => dispatch(setTool(new Rect(canvas)))}/>\n                  <button className={style.toolbar__btn + ' ' + style.circle} onClick={() => dispatch(setTool(new Circle(canvas)))}/>\n                  <button className={style.toolbar__btn + ' ' + style.eraser} onClick={() => dispatch(setTool(new Eraser(canvas)))}/>\n                  <button className={style.toolbar__btn + ' ' + style.line} onClick={() => dispatch(setTool(new Line(canvas)))}/>\n                  <input onChange={e => changeColor()} className={style.inputColor} type='color'/>\n                  <button className={style.toolbar__btn + ' ' + style.undo}/>\n                  <button className={style.toolbar__btn + ' ' + style.redo}/>\n                  <button className={style.toolbar__btn + ' ' + style.save}/>\n            </div>\n      );\n};\n\nexport default Toolbar;"],"mappings":";;AAAA,OAAOA,KAAK,MAAc,OAAO;AACjC,OAAOC,KAAK,MAAM,+BAA+B;AACjD,SAASC,cAAc,EAAEC,cAAc,QAAQ,gBAAgB;AAC/D,SAASC,SAAS,QAAQ,6BAA6B;AACvD,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,IAAI,MAAM,eAAe;AAChC,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,IAAI,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,OAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM;IAACC;EAAM,CAAC,GAAGX,cAAc,CAACY,KAAK,IAAIA,KAAK,CAACC,aAAa,CAAC;EAC7D,MAAM;IAACC;EAAO,CAAC,GAAGb,SAAS,CAACc,OAAO;EACnC,MAAMC,QAAQ,GAAGjB,cAAc,CAAC,CAAC;EAEjC,MAAMkB,WAAW,GAAGA,CAAA,KAAM;IACpBC,KAAK;EACX,CAAC;EAED,oBACMV,OAAA;IAAKW,SAAS,EAAErB,KAAK,CAACsB,OAAQ;IAAAC,QAAA,gBACxBb,OAAA;MAAQW,SAAS,EAAErB,KAAK,CAACwB,YAAY,GAAG,GAAG,GAAGxB,KAAK,CAACyB,KAAM;MAACC,OAAO,EAAEA,CAAA,KAAMR,QAAQ,CAACF,OAAO,CAAC,IAAIZ,KAAK,CAACS,MAAM,CAAC,CAAC;IAAE;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACjHpB,OAAA;MAAQW,SAAS,EAAErB,KAAK,CAACwB,YAAY,GAAG,GAAG,GAAGxB,KAAK,CAAC+B,IAAK;MAACL,OAAO,EAAEA,CAAA,KAAMR,QAAQ,CAACF,OAAO,CAAC,IAAIX,IAAI,CAACQ,MAAM,CAAC,CAAC;IAAE;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC/GpB,OAAA;MAAQW,SAAS,EAAErB,KAAK,CAACwB,YAAY,GAAG,GAAG,GAAGxB,KAAK,CAACgC,MAAO;MAACN,OAAO,EAAEA,CAAA,KAAMR,QAAQ,CAACF,OAAO,CAAC,IAAIV,MAAM,CAACO,MAAM,CAAC,CAAC;IAAE;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACnHpB,OAAA;MAAQW,SAAS,EAAErB,KAAK,CAACwB,YAAY,GAAG,GAAG,GAAGxB,KAAK,CAACiC,MAAO;MAACP,OAAO,EAAEA,CAAA,KAAMR,QAAQ,CAACF,OAAO,CAAC,IAAIT,MAAM,CAACM,MAAM,CAAC,CAAC;IAAE;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACnHpB,OAAA;MAAQW,SAAS,EAAErB,KAAK,CAACwB,YAAY,GAAG,GAAG,GAAGxB,KAAK,CAACkC,IAAK;MAACR,OAAO,EAAEA,CAAA,KAAMR,QAAQ,CAACF,OAAO,CAAC,IAAIR,IAAI,CAACK,MAAM,CAAC,CAAC;IAAE;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC/GpB,OAAA;MAAOyB,QAAQ,EAAEC,CAAC,IAAIjB,WAAW,CAAC,CAAE;MAACE,SAAS,EAAErB,KAAK,CAACqC,UAAW;MAACC,IAAI,EAAC;IAAO;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAChFpB,OAAA;MAAQW,SAAS,EAAErB,KAAK,CAACwB,YAAY,GAAG,GAAG,GAAGxB,KAAK,CAACuC;IAAK;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC3DpB,OAAA;MAAQW,SAAS,EAAErB,KAAK,CAACwB,YAAY,GAAG,GAAG,GAAGxB,KAAK,CAACwC;IAAK;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC3DpB,OAAA;MAAQW,SAAS,EAAErB,KAAK,CAACwB,YAAY,GAAG,GAAG,GAAGxB,KAAK,CAACyC;IAAK;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAElB,CAAC;AAAClB,EAAA,CAtBID,OAAW;EAAA,QACMT,cAAc,EAEdD,cAAc;AAAA;AAAAyC,EAAA,GAH/B/B,OAAW;AAwBjB,eAAeA,OAAO;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}