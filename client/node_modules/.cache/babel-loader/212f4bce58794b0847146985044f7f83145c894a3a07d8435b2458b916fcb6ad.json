{"ast":null,"code":"import Tool from \"./Tool\";\nimport { finishDrawMessage } from \"../hooks/finishDrawMessage\";\nexport default class Circle extends Tool {\n  constructor(canvas, socket, id) {\n    super(canvas, socket, id);\n    this.mouseDown = void 0;\n    this.startX = void 0;\n    this.startY = void 0;\n    this.saved = void 0;\n    this.width = void 0;\n    this.height = void 0;\n    this.listen();\n  }\n  listen() {\n    this.canvas.onmousemove = this.mouseMoveHandler.bind(this);\n    this.canvas.onmousedown = this.mouseDownHandler.bind(this);\n    this.canvas.onmouseup = this.mouseUpHandler.bind(this);\n  }\n  mouseDownHandler(e) {\n    this.mouseDown = true;\n    let canvasData = this.canvas.toDataURL();\n    this.ctx.beginPath();\n    this.startX = e.pageX - e.target.offsetLeft;\n    this.startY = e.pageY - e.target.offsetTop;\n    this.saved = canvasData;\n  }\n  mouseUpHandler(e) {\n    this.mouseDown = false;\n    if (this.socket && this.startX && this.startY) {\n      let currentX = e.pageX - e.target.offsetLeft;\n      let currentY = e.pageY - e.target.offsetTop;\n      let width = currentX - this.startX;\n      let height = currentY - this.startY;\n      let r = Math.sqrt(width ** 2 + height ** 2);\n      this.socket.send(JSON.stringify({\n        method: 'draw',\n        id: this.id,\n        figure: {\n          type: 'circle',\n          x: this.startX,\n          y: this.startY,\n          r,\n          color: this.ctx.fillStyle\n        }\n      }));\n      if (this.socket && this.id) finishDrawMessage(this.socket, this.id);\n    }\n  }\n  mouseMoveHandler(e) {\n    if (this.mouseDown && this.startX && this.startY) {\n      let curentX = e.pageX - e.target.offsetLeft;\n      let curentY = e.pageY - e.target.offsetTop;\n      let width = curentX - this.startX;\n      let height = curentY - this.startY;\n      let r = Math.sqrt(width ** 2 + height ** 2);\n      this.draw(this.startX, this.startY, r);\n    }\n  }\n  draw(x, y, r) {\n    const img = new Image();\n    img.src = this.saved;\n    img.onload = async () => {\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n      this.ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height);\n      this.ctx.beginPath();\n      this.ctx.arc(x, y, r, 0, 2 * Math.PI);\n      this.ctx.fill();\n      this.ctx.stroke();\n    };\n  }\n  static staticDraw(ctx, x, y, r, color) {\n    if (ctx) {\n      ctx.fillStyle = color;\n      ctx.beginPath();\n      ctx.arc(x, y, r, 0, 2 * Math.PI);\n      ctx.fill();\n      ctx.stroke();\n    }\n  }\n}","map":{"version":3,"names":["Tool","finishDrawMessage","Circle","constructor","canvas","socket","id","mouseDown","startX","startY","saved","width","height","listen","onmousemove","mouseMoveHandler","bind","onmousedown","mouseDownHandler","onmouseup","mouseUpHandler","e","canvasData","toDataURL","ctx","beginPath","pageX","target","offsetLeft","pageY","offsetTop","currentX","currentY","r","Math","sqrt","send","JSON","stringify","method","figure","type","x","y","color","fillStyle","curentX","curentY","draw","img","Image","src","onload","clearRect","drawImage","arc","PI","fill","stroke","staticDraw"],"sources":["/Users/diachun/WebstormProjects/canvas/client/src/tools/Circle.ts"],"sourcesContent":["import { eventMouseHandler } from \"../models/eventMouseHandler\";\nimport Tool from \"./Tool\";\nimport {finishDrawMessage} from \"../hooks/finishDrawMessage\";\n\nexport default class Circle extends Tool {\n    mouseDown: boolean | undefined;\n    startX: number | undefined;\n    startY: number | undefined;\n    saved: any;\n    width: any;\n    height: any;\n    constructor(canvas: any, socket: WebSocket, id: string | null) {\n        super(canvas, socket, id);\n        this.listen()\n    }\n\n    listen() {\n        this.canvas.onmousemove = this.mouseMoveHandler.bind(this)\n        this.canvas.onmousedown = this.mouseDownHandler.bind(this)\n        this.canvas.onmouseup = this.mouseUpHandler.bind(this)\n    }\n\n    mouseDownHandler(e: eventMouseHandler) {\n        this.mouseDown = true\n        let canvasData = this.canvas.toDataURL()\n        this.ctx.beginPath()\n        this.startX = e.pageX-e.target.offsetLeft\n        this.startY = e.pageY-e.target.offsetTop\n        this.saved = canvasData\n    }\n\n    mouseUpHandler(e: eventMouseHandler) {\n        this.mouseDown = false\n        if (this.socket && this.startX && this.startY) {\n            let currentX = e.pageX - e.target.offsetLeft;\n            let currentY = e.pageY - e.target.offsetTop;\n            let width = currentX - this.startX;\n            let height = currentY - this.startY;\n            let r = Math.sqrt(width ** 2 + height ** 2);\n\n            this.socket.send(JSON.stringify({\n                method: 'draw',\n                id: this.id,\n                figure: {\n                    type: 'circle',\n                    x: this.startX,\n                    y: this.startY,\n                    r,\n                    color: this.ctx.fillStyle\n                }\n            }))\n            if (this.socket && this.id) finishDrawMessage(this.socket, this.id)\n        }\n\n    }\n\n    mouseMoveHandler(e: eventMouseHandler) {\n        if(this.mouseDown && this.startX && this.startY) {\n            let curentX = e.pageX-e.target.offsetLeft\n            let curentY = e.pageY-e.target.offsetTop\n            let width = curentX - this.startX\n            let height = curentY - this.startY\n            let r = Math.sqrt(width**2 + height**2)\n            this.draw(this.startX, this.startY, r)\n        }\n    }\n\n    draw(x: number, y: number, r: number) {\n        const img = new Image()\n        img.src = this.saved\n        img.onload = async () => {\n            this.ctx.clearRect(0,0, this.canvas.width, this.canvas.height)\n            this.ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height)\n            this.ctx.beginPath()\n            this.ctx.arc(x, y, r, 0, 2*Math.PI)\n            this.ctx.fill()\n            this.ctx.stroke()\n        }\n    }\n\n    static staticDraw(ctx: CanvasRenderingContext2D | null | undefined, x: number, y: number, r: number, color: string) {\n        if (ctx) {\n            ctx.fillStyle = color\n            ctx.beginPath()\n            ctx.arc(x, y, r, 0, 2 * Math.PI)\n            ctx.fill()\n            ctx.stroke()\n        }\n    }\n}"],"mappings":"AACA,OAAOA,IAAI,MAAM,QAAQ;AACzB,SAAQC,iBAAiB,QAAO,4BAA4B;AAE5D,eAAe,MAAMC,MAAM,SAASF,IAAI,CAAC;EAOrCG,WAAWA,CAACC,MAAW,EAAEC,MAAiB,EAAEC,EAAiB,EAAE;IAC3D,KAAK,CAACF,MAAM,EAAEC,MAAM,EAAEC,EAAE,CAAC;IAAC,KAP9BC,SAAS;IAAA,KACTC,MAAM;IAAA,KACNC,MAAM;IAAA,KACNC,KAAK;IAAA,KACLC,KAAK;IAAA,KACLC,MAAM;IAGF,IAAI,CAACC,MAAM,CAAC,CAAC;EACjB;EAEAA,MAAMA,CAAA,EAAG;IACL,IAAI,CAACT,MAAM,CAACU,WAAW,GAAG,IAAI,CAACC,gBAAgB,CAACC,IAAI,CAAC,IAAI,CAAC;IAC1D,IAAI,CAACZ,MAAM,CAACa,WAAW,GAAG,IAAI,CAACC,gBAAgB,CAACF,IAAI,CAAC,IAAI,CAAC;IAC1D,IAAI,CAACZ,MAAM,CAACe,SAAS,GAAG,IAAI,CAACC,cAAc,CAACJ,IAAI,CAAC,IAAI,CAAC;EAC1D;EAEAE,gBAAgBA,CAACG,CAAoB,EAAE;IACnC,IAAI,CAACd,SAAS,GAAG,IAAI;IACrB,IAAIe,UAAU,GAAG,IAAI,CAAClB,MAAM,CAACmB,SAAS,CAAC,CAAC;IACxC,IAAI,CAACC,GAAG,CAACC,SAAS,CAAC,CAAC;IACpB,IAAI,CAACjB,MAAM,GAAGa,CAAC,CAACK,KAAK,GAACL,CAAC,CAACM,MAAM,CAACC,UAAU;IACzC,IAAI,CAACnB,MAAM,GAAGY,CAAC,CAACQ,KAAK,GAACR,CAAC,CAACM,MAAM,CAACG,SAAS;IACxC,IAAI,CAACpB,KAAK,GAAGY,UAAU;EAC3B;EAEAF,cAAcA,CAACC,CAAoB,EAAE;IACjC,IAAI,CAACd,SAAS,GAAG,KAAK;IACtB,IAAI,IAAI,CAACF,MAAM,IAAI,IAAI,CAACG,MAAM,IAAI,IAAI,CAACC,MAAM,EAAE;MAC3C,IAAIsB,QAAQ,GAAGV,CAAC,CAACK,KAAK,GAAGL,CAAC,CAACM,MAAM,CAACC,UAAU;MAC5C,IAAII,QAAQ,GAAGX,CAAC,CAACQ,KAAK,GAAGR,CAAC,CAACM,MAAM,CAACG,SAAS;MAC3C,IAAInB,KAAK,GAAGoB,QAAQ,GAAG,IAAI,CAACvB,MAAM;MAClC,IAAII,MAAM,GAAGoB,QAAQ,GAAG,IAAI,CAACvB,MAAM;MACnC,IAAIwB,CAAC,GAAGC,IAAI,CAACC,IAAI,CAACxB,KAAK,IAAI,CAAC,GAAGC,MAAM,IAAI,CAAC,CAAC;MAE3C,IAAI,CAACP,MAAM,CAAC+B,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;QAC5BC,MAAM,EAAE,MAAM;QACdjC,EAAE,EAAE,IAAI,CAACA,EAAE;QACXkC,MAAM,EAAE;UACJC,IAAI,EAAE,QAAQ;UACdC,CAAC,EAAE,IAAI,CAAClC,MAAM;UACdmC,CAAC,EAAE,IAAI,CAAClC,MAAM;UACdwB,CAAC;UACDW,KAAK,EAAE,IAAI,CAACpB,GAAG,CAACqB;QACpB;MACJ,CAAC,CAAC,CAAC;MACH,IAAI,IAAI,CAACxC,MAAM,IAAI,IAAI,CAACC,EAAE,EAAEL,iBAAiB,CAAC,IAAI,CAACI,MAAM,EAAE,IAAI,CAACC,EAAE,CAAC;IACvE;EAEJ;EAEAS,gBAAgBA,CAACM,CAAoB,EAAE;IACnC,IAAG,IAAI,CAACd,SAAS,IAAI,IAAI,CAACC,MAAM,IAAI,IAAI,CAACC,MAAM,EAAE;MAC7C,IAAIqC,OAAO,GAAGzB,CAAC,CAACK,KAAK,GAACL,CAAC,CAACM,MAAM,CAACC,UAAU;MACzC,IAAImB,OAAO,GAAG1B,CAAC,CAACQ,KAAK,GAACR,CAAC,CAACM,MAAM,CAACG,SAAS;MACxC,IAAInB,KAAK,GAAGmC,OAAO,GAAG,IAAI,CAACtC,MAAM;MACjC,IAAII,MAAM,GAAGmC,OAAO,GAAG,IAAI,CAACtC,MAAM;MAClC,IAAIwB,CAAC,GAAGC,IAAI,CAACC,IAAI,CAACxB,KAAK,IAAE,CAAC,GAAGC,MAAM,IAAE,CAAC,CAAC;MACvC,IAAI,CAACoC,IAAI,CAAC,IAAI,CAACxC,MAAM,EAAE,IAAI,CAACC,MAAM,EAAEwB,CAAC,CAAC;IAC1C;EACJ;EAEAe,IAAIA,CAACN,CAAS,EAAEC,CAAS,EAAEV,CAAS,EAAE;IAClC,MAAMgB,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;IACvBD,GAAG,CAACE,GAAG,GAAG,IAAI,CAACzC,KAAK;IACpBuC,GAAG,CAACG,MAAM,GAAG,YAAY;MACrB,IAAI,CAAC5B,GAAG,CAAC6B,SAAS,CAAC,CAAC,EAAC,CAAC,EAAE,IAAI,CAACjD,MAAM,CAACO,KAAK,EAAE,IAAI,CAACP,MAAM,CAACQ,MAAM,CAAC;MAC9D,IAAI,CAACY,GAAG,CAAC8B,SAAS,CAACL,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC7C,MAAM,CAACO,KAAK,EAAE,IAAI,CAACP,MAAM,CAACQ,MAAM,CAAC;MACpE,IAAI,CAACY,GAAG,CAACC,SAAS,CAAC,CAAC;MACpB,IAAI,CAACD,GAAG,CAAC+B,GAAG,CAACb,CAAC,EAAEC,CAAC,EAAEV,CAAC,EAAE,CAAC,EAAE,CAAC,GAACC,IAAI,CAACsB,EAAE,CAAC;MACnC,IAAI,CAAChC,GAAG,CAACiC,IAAI,CAAC,CAAC;MACf,IAAI,CAACjC,GAAG,CAACkC,MAAM,CAAC,CAAC;IACrB,CAAC;EACL;EAEA,OAAOC,UAAUA,CAACnC,GAAgD,EAAEkB,CAAS,EAAEC,CAAS,EAAEV,CAAS,EAAEW,KAAa,EAAE;IAChH,IAAIpB,GAAG,EAAE;MACLA,GAAG,CAACqB,SAAS,GAAGD,KAAK;MACrBpB,GAAG,CAACC,SAAS,CAAC,CAAC;MACfD,GAAG,CAAC+B,GAAG,CAACb,CAAC,EAAEC,CAAC,EAAEV,CAAC,EAAE,CAAC,EAAE,CAAC,GAAGC,IAAI,CAACsB,EAAE,CAAC;MAChChC,GAAG,CAACiC,IAAI,CAAC,CAAC;MACVjC,GAAG,CAACkC,MAAM,CAAC,CAAC;IAChB;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}